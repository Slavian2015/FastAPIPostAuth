name: CI/CD
on:
  push:
    branches: [ '*' ]
  workflow_dispatch:

jobs:
  static_analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python runtime
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          sudo apt-get update
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run analyze
        run: |
          mypy --disallow-untyped-defs --disallow-incomplete-defs --strict-equality src

  unit_tests:
    runs-on: ubuntu-latest
    env:
      AUTH_SECRET: "222qwe"
      AUTH_TOKEN_TTL: 86400
      AUTH_ALGORITHM: "HS256"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python runtime
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run pytest for unit test suite
        run: |
          python -m pytest tests/unit

  functional_tests:
    runs-on: ubuntu-latest
    env:
      SQLITE_DSN: "sqlite:///sqlite3.db"
      AUTH_SECRET: "222qwe"
      AUTH_TOKEN_TTL: 86400
      AUTH_ALGORITHM: "HS256"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python runtime
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run migrations
        run: python -m alembic upgrade head
      - name: Run pytest for functional test suite
        run: |
          python -m pytest tests/functional
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python runtime
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run flake8 linter
        run: flake8 --ignore=W291 src tests demo_db
